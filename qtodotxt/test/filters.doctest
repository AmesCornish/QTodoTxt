"""
To run tests: python run-tests.py
"""

>>> import sys, os
>>> sys.path.insert(0, os.path.join('.', '..', '..'))
>>> from qtodotxt.lib import filters,task_parser
>>> from qtodotxt.lib.filters import SimpleTextFilter, FutureFilter

========================================
1. SimpleTextFilter
========================================

>>> task = task_parser.Task('do Something')
>>> filterSTF = SimpleTextFilter("Som")
>>> resultTasks = task_parser.filterTasks([filterSTF],[task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

========================================
1. SimpleTextFilter with parentheses
========================================

>>> task_parenth = task_parser.Task('(A) do Something')
>>> filterSTF_par1 = SimpleTextFilter("(A")
>>> resultTasks = task_parser.filterTasks([filterSTF],[task_parenth])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'(A) do Something'

>>> filterSTF_par2 = SimpleTextFilter("(A)")
>>> resultTasks = task_parser.filterTasks([filterSTF_par2],[task_parenth])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'(A) do Something'

========================================
2. SimpleTextFilter empty filter string
========================================

>>> filterSTF_or11 = SimpleTextFilter("")
>>> resultTasks = task_parser.filterTasks([filterSTF_or11], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

========================================
3. SimpleTextFilter case insensitive
========================================

>>> filterSTFi = SimpleTextFilter("som")
>>> resultTasks = task_parser.filterTasks([filterSTFi],[task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

========================================
4. SimpleTextFilter OR condition
========================================

>>> filterSTF_or1 = SimpleTextFilter("Som | zzz")
>>> resultTasks = task_parser.filterTasks([filterSTF_or1], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or2 = SimpleTextFilter("yyy | zzz")
>>> resultTasks = task_parser.filterTasks([filterSTF_or2], [task])
>>> len(resultTasks)
0

========================================
5. SimpleTextFilter AND condition (case insensitive)
========================================

>>> filterSTF_or3 = SimpleTextFilter("som thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or3], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or4 = SimpleTextFilter("som, thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or4], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or5 = SimpleTextFilter("zzz thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or5], [task])
>>> len(resultTasks)
0

========================================
6. SimpleTextFilter AND and NOT conditions 
========================================

>>> filterSTF_or6 = SimpleTextFilter("!zzz thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or6], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or7 = SimpleTextFilter("~zzz thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or7], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or8 = SimpleTextFilter("~zzz !thing")
>>> resultTasks = task_parser.filterTasks([filterSTF_or8], [task])
>>> len(resultTasks)
0

========================================
7. SimpleTextFilter AND, OR, and NOT conditions 
========================================

>>> filterSTF_or9 = SimpleTextFilter("zzz | thing ~yyy")
>>> resultTasks = task_parser.filterTasks([filterSTF_or9], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'

>>> filterSTF_or10 = SimpleTextFilter("zzz | !thing yyy")
>>> resultTasks = task_parser.filterTasks([filterSTF_or10], [task])
>>> len(resultTasks)
0

========================================
8. SimpleTextFilter NOT condition
========================================

>>> filterSTF_or12 = SimpleTextFilter("~som")
>>> resultTasks = task_parser.filterTasks([filterSTF_or12], [task])
>>> len(resultTasks)
0

>>> filterSTF_or12 = SimpleTextFilter("!som")
>>> resultTasks = task_parser.filterTasks([filterSTF_or12], [task])
>>> len(resultTasks)
0

>>> filterSTF_or12 = SimpleTextFilter("!zzz")
>>> resultTasks = task_parser.filterTasks([filterSTF_or12], [task])
>>> len(resultTasks)
1
>>> resultTasks[0].text
'do Something'
